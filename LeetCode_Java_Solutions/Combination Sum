class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList<>();
        subsets(0, candidates, new ArrayList(),  res, target);
        return res;
    }
    
        void subsets(int index, int[] nums, List<Integer> temp, List<List<Integer>> res, int target){
            
           if(target==0){
            res.add(new ArrayList(temp));
           }
            
            if(target<0){
                return;
            }
            
            for(int i = index; i<nums.length; i++){
                temp.add(nums[i]);
                subsets(i, nums, temp, res, target-nums[i]);
                temp.remove(temp.size()-1);
            }
        }
}
